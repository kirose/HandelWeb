package mx.handel.ws.ctrl;


import javax.ejb.EJB;
import javax.ws.rs.Consumes;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;

import org.apache.commons.io.IOUtils;

import mx.handel.cfg.ws.ctrl.WSAbstractCtrl;
import mx.handel.cfg.ws.pojo.WSResponse;
import mx.handel.ws.WSValidator;
import mx.handel.ws.dao.WSServicioDAO;
import mx.handel.ws.entity.WSServicio;
import mx.handel.ws.entity.WSUsuario;
/**
 * 
 * @author Marco Antonio Salazar
 *
 */
@Path("/rs")
public class WSAppCtrl extends WSAbstractCtrl{
	
	@EJB WSServicioDAO servicioDAO;

    @POST
    @Path("/{param}")
    @Produces(MediaType.APPLICATION_JSON)
    @Consumes(MediaType.APPLICATION_JSON)
	public Response manage(@PathParam("param") String service) {
    	try{

    		String jsonParams = IOUtils.toString(getServletRequest().getInputStream(),"UTF-8");

	    	WSServicio servicio = WSValidator.getInstance(servicioDAO).getServicio(service);
	    	if (servicio == null){
	    		return getNoCacheResponseBuilder(Response.Status.NOT_FOUND)
        				.entity(WSResponse.newObjectResponse()
            				.add("message", "Servicio invalido")
            				.add("status", WSResponse.SERVICE_NOT_FOUND)
            				.toString()
        				).build();
	    	}
	    	WSUsuario user = getAuthenticatedWSUsuario();
	    	WSResponse vo = servicioDAO.invoke(user.getIdUsuario(), servicio.getIdServicio(), jsonParams);

	    	if ("ERROR".equals(vo.getStatus())) {
	    		getLogger().error(
    				"Error al invocar servicio "+servicio.getIdServicio()+"-"+servicio.getServicio()+":\n\n"+
    				new String(vo.getMessageLog().getBytes("UTF-8"),"UTF-8")
    			);
	    	}
	    	
			return Response.status(Response.Status.OK).entity(vo.toString()).build();
    	} catch(Exception e){
        	getLogger().error("Error al invocar servicio "+service, e);
            return getNoCacheResponseBuilder(Response.Status.INTERNAL_SERVER_ERROR).build();
    	}
	}
}